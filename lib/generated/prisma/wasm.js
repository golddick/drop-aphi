
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  email: 'email',
  fullName: 'fullName',
  userName: 'userName',
  password: 'password',
  imageUrl: 'imageUrl',
  paystackCustomerId: 'paystackCustomerId',
  paystackSubscriptionId: 'paystackSubscriptionId',
  plan: 'plan',
  role: 'role',
  subscriptionStatus: 'subscriptionStatus',
  accType: 'accType',
  currentPeriodEnd: 'currentPeriodEnd',
  organization: 'organization',
  website: 'website',
  kycStatus: 'kycStatus',
  SenderName: 'SenderName',
  amount: 'amount',
  currency: 'currency',
  lastPaymentDate: 'lastPaymentDate',
  nextPaymentDate: 'nextPaymentDate',
  successfulPayments: 'successfulPayments',
  failedAttempts: 'failedAttempts',
  subscriberLimit: 'subscriberLimit',
  emailLimit: 'emailLimit',
  blogPostLimit: 'blogPostLimit',
  aiGenerationLimit: 'aiGenerationLimit',
  termsAndConditionsAccepted: 'termsAndConditionsAccepted',
  approvedKYC: 'approvedKYC',
  isEmailVerified: 'isEmailVerified',
  isLoggedIn: 'isLoggedIn',
  is2FAEnabled: 'is2FAEnabled',
  createdAt: 'createdAt',
  loggedInAt: 'loggedInAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  jti: 'jti',
  userId: 'userId',
  hashed: 'hashed',
  userAgent: 'userAgent',
  ip: 'ip',
  revoked: 'revoked',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.OTPScalarFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp',
  attempts: 'attempts',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  description: 'description',
  amount: 'amount',
  status: 'status',
  invoiceUrl: 'invoiceUrl',
  date: 'date',
  externalId: 'externalId'
};

exports.Prisma.ThirdPartyOTPScalarFieldEnum = {
  email: 'email',
  code: 'code',
  otpType: 'otpType',
  expiresAt: 'expiresAt',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  attempts: 'attempts'
};

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  keyHash: 'keyHash',
  jwt: 'jwt',
  createdAt: 'createdAt',
  isTrial: 'isTrial',
  expiresAt: 'expiresAt'
};

exports.Prisma.KycScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountType: 'accountType',
  status: 'status',
  levels: 'levels',
  documents: 'documents',
  livePhoto: 'livePhoto',
  reviewedTime: 'reviewedTime',
  reviewedBy: 'reviewedBy',
  rejectedResponse: 'rejectedResponse',
  comments: 'comments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KYCDocumentScalarFieldEnum = {
  id: 'id',
  kycId: 'kycId',
  type: 'type',
  url: 'url',
  key: 'key',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.MembershipUsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  month: 'month',
  emailsSent: 'emailsSent',
  subscribersAdded: 'subscribersAdded',
  campaignsCreated: 'campaignsCreated',
  blogPostsCreated: 'blogPostsCreated',
  aiGenerationsUsed: 'aiGenerationsUsed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subtitle: 'subtitle',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  format: 'format',
  status: 'status',
  visibility: 'visibility',
  featuredImage: 'featuredImage',
  featuredVideo: 'featuredVideo',
  galleryImages: 'galleryImages',
  authorId: 'authorId',
  authorBio: 'authorBio',
  authorTitle: 'authorTitle',
  author: 'author',
  categoryId: 'categoryId',
  seoTitle: 'seoTitle',
  seoDescription: 'seoDescription',
  seoKeywords: 'seoKeywords',
  seoScore: 'seoScore',
  shares: 'shares',
  readTime: 'readTime',
  wordCount: 'wordCount',
  characterCount: 'characterCount',
  likes: 'likes',
  views: 'views',
  flagReason: 'flagReason',
  isFlagged: 'isFlagged',
  isFeatured: 'isFeatured',
  isPinned: 'isPinned',
  allowComments: 'allowComments',
  publishedAt: 'publishedAt',
  flaggedAt: 'flaggedAt',
  scheduledAt: 'scheduledAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  generatedById: 'generatedById'
};

exports.Prisma.FlagedBlogPostScalarFieldEnum = {
  id: 'id',
  reason: 'reason',
  comment: 'comment',
  flaggedBy: 'flaggedBy',
  status: 'status',
  createdAt: 'createdAt',
  reviewedAt: 'reviewedAt',
  postId: 'postId',
  userId: 'userId'
};

exports.Prisma.BlogPostViewScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  userId: 'userId',
  externalName: 'externalName',
  createdAt: 'createdAt'
};

exports.Prisma.BlogCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogTagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogCommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  authorId: 'authorId',
  postId: 'postId',
  userId: 'userId',
  parentId: 'parentId',
  externalName: 'externalName',
  externalAvatar: 'externalAvatar',
  likes: 'likes',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReportedCommentScalarFieldEnum = {
  id: 'id',
  commentId: 'commentId',
  blogSlug: 'blogSlug',
  blogOwner: 'blogOwner',
  parentCommentBy: 'parentCommentBy',
  reportedBy: 'reportedBy',
  reason: 'reason',
  reportedAt: 'reportedAt',
  resolved: 'resolved'
};

exports.Prisma.BlogAIGenerationScalarFieldEnum = {
  id: 'id',
  prompt: 'prompt',
  parameters: 'parameters',
  status: 'status',
  output: 'output',
  format: 'format',
  cost: 'cost',
  tokensUsed: 'tokensUsed',
  model: 'model',
  userId: 'userId',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
};

exports.Prisma.CampaignScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  description: 'description',
  type: 'type',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  emailsSent: 'emailsSent',
  recipients: 'recipients',
  openRate: 'openRate',
  clickRate: 'clickRate',
  lastSentAt: 'lastSentAt'
};

exports.Prisma.SubscriberScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  newsLetterOwnerId: 'newsLetterOwnerId',
  source: 'source',
  status: 'status',
  campaignId: 'campaignId',
  pageUrl: 'pageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailNotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  category: 'category',
  title: 'title',
  content: 'content',
  textContent: 'textContent',
  htmlContent: 'htmlContent',
  status: 'status',
  priority: 'priority',
  userId: 'userId',
  emailsSentCount: 'emailsSentCount',
  openCount: 'openCount',
  clickCount: 'clickCount',
  recipients: 'recipients',
  bounceCount: 'bounceCount',
  openedByEmails: 'openedByEmails',
  clickedByEmails: 'clickedByEmails',
  lastOpened: 'lastOpened',
  lastClicked: 'lastClicked',
  metadata: 'metadata',
  sentAt: 'sentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  read: 'read'
};

exports.Prisma.ClickedLinkScalarFieldEnum = {
  id: 'id',
  emailId: 'emailId',
  url: 'url',
  clickedAt: 'clickedAt',
  clickedBy: 'clickedBy'
};

exports.Prisma.NotificationEmailClickedLinkScalarFieldEnum = {
  id: 'id',
  notificationEmailId: 'notificationEmailId',
  url: 'url',
  clickedAt: 'clickedAt',
  clickedBy: 'clickedBy'
};

exports.Prisma.EmailScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  emailSubject: 'emailSubject',
  previewText: 'previewText',
  builderMode: 'builderMode',
  builderData: 'builderData',
  templateUsed: 'templateUsed',
  status: 'status',
  emailType: 'emailType',
  trackOpens: 'trackOpens',
  trackClicks: 'trackClicks',
  enableUnsubscribe: 'enableUnsubscribe',
  scheduleDate: 'scheduleDate',
  scheduleTime: 'scheduleTime',
  emailsSentCount: 'emailsSentCount',
  recipients: 'recipients',
  bounceCount: 'bounceCount',
  openCount: 'openCount',
  clickCount: 'clickCount',
  sentAt: 'sentAt',
  lastOpened: 'lastOpened',
  lastClicked: 'lastClicked',
  openedByIps: 'openedByIps',
  openedByEmails: 'openedByEmails',
  clickedByIps: 'clickedByIps',
  clickedByEmails: 'clickedByEmails',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  newsLetterOwnerId: 'newsLetterOwnerId',
  campaignId: 'campaignId',
  messageId: 'messageId'
};

exports.Prisma.EmailElementScalarFieldEnum = {
  id: 'id',
  emailId: 'emailId',
  elementId: 'elementId',
  type: 'type',
  content: 'content',
  properties: 'properties',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  thumbnail: 'thumbnail',
  category: 'category',
  tags: 'tags',
  elements: 'elements',
  subject: 'subject',
  isPublic: 'isPublic',
  isFeatured: 'isFeatured',
  usageCount: 'usageCount',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailAttachmentScalarFieldEnum = {
  id: 'id',
  emailId: 'emailId',
  filename: 'filename',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  url: 'url',
  createdAt: 'createdAt'
};

exports.Prisma.EmailRecipientScalarFieldEnum = {
  id: 'id',
  emailId: 'emailId',
  recipientEmail: 'recipientEmail',
  status: 'status',
  sentAt: 'sentAt',
  deliveredAt: 'deliveredAt',
  openedAt: 'openedAt',
  clickedAt: 'clickedAt',
  bouncedAt: 'bouncedAt',
  bounceReason: 'bounceReason',
  unsubscribeAt: 'unsubscribeAt'
};

exports.Prisma.EmailAnalyticsScalarFieldEnum = {
  id: 'id',
  emailId: 'emailId',
  totalOpens: 'totalOpens',
  deliveredCount: 'deliveredCount',
  totalRecipients: 'totalRecipients',
  uniqueOpens: 'uniqueOpens',
  totalClicks: 'totalClicks',
  uniqueClicks: 'uniqueClicks',
  deliveryRate: 'deliveryRate',
  openRate: 'openRate',
  clickRate: 'clickRate',
  bounceRate: 'bounceRate',
  unsubscribeCount: 'unsubscribeCount',
  spamReportCount: 'spamReportCount',
  forwardCount: 'forwardCount',
  deviceBreakdown: 'deviceBreakdown',
  locationData: 'locationData'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Plan = exports.$Enums.Plan = {
  FREE: 'FREE',
  LAUNCH: 'LAUNCH',
  SCALE: 'SCALE',
  ENTERPRISE: 'ENTERPRISE'
};

exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  NEWSLETTEROWNER: 'NEWSLETTEROWNER',
  PLATFORMADMIN: 'PLATFORMADMIN',
  SUPERADMIN: 'SUPERADMIN',
  BLOGWRITER: 'BLOGWRITER'
};

exports.PlanSubscriptionStatus = exports.$Enums.PlanSubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PAST_DUE: 'PAST_DUE',
  CANCELLED: 'CANCELLED'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  SUBSCRIBED: 'SUBSCRIBED',
  UNSUBSCRIBED: 'UNSUBSCRIBED'
};

exports.CampaignStatus = exports.$Enums.CampaignStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  ENDED: 'ENDED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  EMAIL: 'EMAIL',
  SYSTEM: 'SYSTEM',
  PUSH: 'PUSH',
  SMS: 'SMS'
};

exports.NotificationCategory = exports.$Enums.NotificationCategory = {
  WELCOME: 'WELCOME',
  NEWSLETTER: 'NEWSLETTER',
  NEW_BLOG: 'NEW_BLOG',
  KYC_APPROVAL: 'KYC_APPROVAL',
  FLAGGED: 'FLAGGED',
  FLAGGED_RESOLVED: 'FLAGGED_RESOLVED'
};

exports.NotificationStatus = exports.$Enums.NotificationStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  SENDING: 'SENDING',
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  FAILED: 'FAILED',
  READ: 'READ'
};

exports.NotificationPriority = exports.$Enums.NotificationPriority = {
  HIGH: 'HIGH',
  MEDIUM: 'MEDIUM',
  LOW: 'LOW'
};

exports.PostStatus = exports.$Enums.PostStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  ARCHIVED: 'ARCHIVED',
  SCHEDULED: 'SCHEDULED'
};

exports.FlagStatus = exports.$Enums.FlagStatus = {
  FLAGGED: 'FLAGGED',
  RESOLVED: 'RESOLVED'
};

exports.PostVisibility = exports.$Enums.PostVisibility = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE',
  MEMBERS_ONLY: 'MEMBERS_ONLY'
};

exports.ContentFormat = exports.$Enums.ContentFormat = {
  MARKDOWN: 'MARKDOWN',
  HTML: 'HTML',
  RICH_TEXT: 'RICH_TEXT'
};

exports.AIGenerationStatus = exports.$Enums.AIGenerationStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  IN_PROGRESS: 'IN_PROGRESS'
};

exports.KYCAccountType = exports.$Enums.KYCAccountType = {
  INDIVIDUAL: 'INDIVIDUAL',
  ORGANIZATION: 'ORGANIZATION'
};

exports.AccountType = exports.$Enums.AccountType = {
  INDIVIDUAL: 'INDIVIDUAL',
  ORGANIZATION: 'ORGANIZATION'
};

exports.KYCStatus = exports.$Enums.KYCStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  REJECTED: 'REJECTED',
  APPROVED: 'APPROVED',
  IN_PROGRESS: 'IN_PROGRESS'
};

exports.EmailStatus = exports.$Enums.EmailStatus = {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  SENDING: 'SENDING',
  SENT: 'SENT',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.EmailType = exports.$Enums.EmailType = {
  BROADCAST: 'BROADCAST',
  TRANSACTIONAL: 'TRANSACTIONAL',
  NEWSLETTER: 'NEWSLETTER',
  CAMPAIGN: 'CAMPAIGN',
  AUTOMATION: 'AUTOMATION',
  TEST: 'TEST'
};

exports.ElementType = exports.$Enums.ElementType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO',
  BUTTON: 'BUTTON',
  SOCIAL: 'SOCIAL',
  DIVIDER: 'DIVIDER',
  COLUMNS: 'COLUMNS'
};

exports.RecipientStatus = exports.$Enums.RecipientStatus = {
  FAILED: 'FAILED',
  PENDING: 'PENDING',
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  OPENED: 'OPENED',
  CLICKED: 'CLICKED',
  BOUNCED: 'BOUNCED',
  UNSUBSCRIBED: 'UNSUBSCRIBED',
  COMPLAINED: 'COMPLAINED'
};

exports.Prisma.ModelName = {
  User: 'User',
  RefreshToken: 'RefreshToken',
  OTP: 'OTP',
  Invoice: 'Invoice',
  ThirdPartyOTP: 'ThirdPartyOTP',
  ApiKey: 'ApiKey',
  Kyc: 'Kyc',
  KYCDocument: 'KYCDocument',
  MembershipUsage: 'MembershipUsage',
  BlogPost: 'BlogPost',
  FlagedBlogPost: 'FlagedBlogPost',
  BlogPostView: 'BlogPostView',
  BlogCategory: 'BlogCategory',
  BlogTag: 'BlogTag',
  BlogComment: 'BlogComment',
  ReportedComment: 'ReportedComment',
  BlogAIGeneration: 'BlogAIGeneration',
  Campaign: 'Campaign',
  Subscriber: 'Subscriber',
  EmailNotification: 'EmailNotification',
  ClickedLink: 'ClickedLink',
  NotificationEmailClickedLink: 'NotificationEmailClickedLink',
  Email: 'Email',
  EmailElement: 'EmailElement',
  EmailTemplate: 'EmailTemplate',
  EmailAttachment: 'EmailAttachment',
  EmailRecipient: 'EmailRecipient',
  EmailAnalytics: 'EmailAnalytics'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\username\\project\\dropaphi\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\username\\project\\dropaphi\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../lib/generated/prisma\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nenum Plan {\n  FREE\n  LAUNCH\n  SCALE\n  ENTERPRISE\n}\n\nenum Role {\n  USER\n  NEWSLETTEROWNER\n  PLATFORMADMIN\n  SUPERADMIN\n  BLOGWRITER\n}\n\nenum PlanSubscriptionStatus {\n  ACTIVE\n  INACTIVE\n  PAST_DUE\n  CANCELLED\n}\n\nenum SubscriptionStatus {\n  SUBSCRIBED\n  UNSUBSCRIBED\n}\n\nenum CampaignStatus {\n  ACTIVE\n  INACTIVE\n  ENDED\n}\n\nenum NotificationType {\n  EMAIL\n  SYSTEM\n  PUSH\n  SMS\n}\n\nenum NotificationCategory {\n  WELCOME\n  NEWSLETTER\n  NEW_BLOG\n  KYC_APPROVAL\n  FLAGGED\n  FLAGGED_RESOLVED\n}\n\nenum NotificationStatus {\n  DRAFT\n  PENDING\n  SENDING\n  SENT\n  DELIVERED\n  FAILED\n  READ\n}\n\nenum NotificationPriority {\n  HIGH\n  MEDIUM\n  LOW\n}\n\nenum PostStatus {\n  DRAFT\n  PUBLISHED\n  ARCHIVED\n  SCHEDULED\n}\n\nenum FlagStatus {\n  FLAGGED\n  RESOLVED\n}\n\nenum PostVisibility {\n  PUBLIC\n  PRIVATE\n  MEMBERS_ONLY\n}\n\nenum ContentFormat {\n  MARKDOWN\n  HTML\n  RICH_TEXT\n}\n\nenum AIGenerationStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  IN_PROGRESS\n}\n\nenum KYCAccountType {\n  INDIVIDUAL\n  ORGANIZATION\n}\n\nenum AccountType {\n  INDIVIDUAL\n  ORGANIZATION\n}\n\nenum KYCStatus {\n  PENDING\n  COMPLETED\n  REJECTED\n  APPROVED\n  IN_PROGRESS\n}\n\nenum EmailStatus {\n  DRAFT\n  SCHEDULED\n  SENDING\n  SENT\n  FAILED\n  CANCELLED\n}\n\nenum EmailType {\n  BROADCAST\n  TRANSACTIONAL\n  NEWSLETTER\n  CAMPAIGN\n  AUTOMATION\n  TEST\n}\n\nenum ElementType {\n  TEXT\n  IMAGE\n  VIDEO\n  BUTTON\n  SOCIAL\n  DIVIDER\n  COLUMNS\n}\n\nenum RecipientStatus {\n  FAILED\n  PENDING\n  SENT\n  DELIVERED\n  OPENED\n  CLICKED\n  BOUNCED\n  UNSUBSCRIBED\n  COMPLAINED\n}\n\nmodel User {\n  id                           String                 @id @default(uuid())\n  userId                       String                 @unique\n  email                        String                 @unique\n  fullName                     String\n  userName                     String\n  password                     String\n  imageUrl                     String?\n  paystackCustomerId           String?\n  paystackSubscriptionId       String?\n  plan                         Plan                   @default(FREE)\n  role                         Role                   @default(USER)\n  subscriptionStatus           PlanSubscriptionStatus @default(INACTIVE)\n  accType                      AccountType            @default(INDIVIDUAL)\n  currentPeriodEnd             DateTime?\n  organization                 String?\n  website                      String?\n  kycStatus                    KYCStatus              @default(PENDING)\n  SenderName                   String?\n  amount                       Int                    @default(0)\n  currency                     String                 @default(\"NGN\")\n  lastPaymentDate              DateTime?\n  nextPaymentDate              DateTime?\n  successfulPayments           Int                    @default(0)\n  failedAttempts               Int                    @default(0)\n  subscriberLimit              Int                    @default(500)\n  emailLimit                   Int                    @default(20)\n  blogPostLimit                Int                    @default(10)\n  aiGenerationLimit            Int                    @default(5)\n  termsAndConditionsAccepted   Boolean                @default(false)\n  approvedKYC                  Boolean                @default(false)\n  isEmailVerified              Boolean                @default(false)\n  isLoggedIn                   Boolean                @default(false)\n  is2FAEnabled                 Boolean                @default(false)\n  createdAt                    DateTime               @default(now())\n  loggedInAt                   DateTime               @default(now())\n  updatedAt                    DateTime               @updatedAt\n  apiKeys                      ApiKey[]\n  aIContentGenerationToExcerpt BlogAIGeneration[]\n  blogComments                 BlogComment[]\n  blogPosts                    BlogPost[]\n  postViews                    BlogPostView[]\n  emails                       Email[]\n  flagedPosts                  FlagedBlogPost[]\n  invoices                     Invoice[]\n  kyc                          Kyc?\n  usage                        MembershipUsage[]\n  notificationEmails           EmailNotification[]\n  tokens                       RefreshToken[]\n  reportedComments             ReportedComment[]\n  template                     EmailTemplate[]\n\n  @@index([paystackCustomerId])\n  @@index([paystackSubscriptionId])\n}\n\nmodel RefreshToken {\n  id        String   @id @default(cuid())\n  jti       String   @unique\n  userId    String\n  hashed    String\n  userAgent String?\n  ip        String?\n  revoked   Boolean  @default(false)\n  createdAt DateTime @default(now())\n  expiresAt DateTime\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([expiresAt])\n}\n\nmodel OTP {\n  id        String   @id @default(cuid())\n  email     String   @db.VarChar(255)\n  otp       String   @db.VarChar(255)\n  attempts  Int      @default(0)\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([email])\n  @@map(\"otps\")\n}\n\nmodel Invoice {\n  id          String   @id @default(cuid())\n  userId      String\n  description String\n  amount      Int\n  status      String\n  invoiceUrl  String\n  date        DateTime @default(now())\n  externalId  String?\n  user        User     @relation(fields: [userId], references: [userId])\n}\n\nmodel ThirdPartyOTP {\n  email     String   @id\n  code      String\n  otpType   String\n  expiresAt DateTime\n  createdBy String\n  createdAt DateTime @default(now())\n  attempts  Int      @default(0)\n}\n\nmodel ApiKey {\n  id        String   @id @default(cuid())\n  userId    String\n  keyHash   String   @unique\n  jwt       String\n  createdAt DateTime @default(now())\n  isTrial   Boolean  @default(false)\n  expiresAt DateTime\n  user      User     @relation(fields: [userId], references: [userId])\n}\n\nmodel Kyc {\n  id               String         @id @default(cuid())\n  userId           String         @unique\n  accountType      KYCAccountType\n  status           KYCStatus      @default(PENDING)\n  levels           Json\n  documents        Json\n  livePhoto        String?\n  reviewedTime     DateTime?\n  reviewedBy       String?\n  rejectedResponse String?\n  comments         String?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  user             User           @relation(fields: [userId], references: [userId])\n  kycDocuments     KYCDocument[]\n}\n\nmodel KYCDocument {\n  id         String   @id @default(cuid())\n  kycId      String\n  type       String\n  url        String\n  key        String\n  uploadedAt DateTime @default(now())\n  kyc        Kyc      @relation(fields: [kycId], references: [id])\n}\n\nmodel MembershipUsage {\n  id                String   @id @default(uuid())\n  userId            String\n  month             String\n  emailsSent        Int      @default(0)\n  subscribersAdded  Int      @default(0)\n  campaignsCreated  Int      @default(0)\n  blogPostsCreated  Int      @default(0)\n  aiGenerationsUsed Int      @default(0)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n  user              User     @relation(fields: [userId], references: [userId], onDelete: Cascade)\n\n  @@unique([userId, month], name: \"userId_month\")\n  @@index([userId])\n  @@index([month])\n}\n\nmodel BlogPost {\n  id             String            @id @default(uuid())\n  title          String\n  subtitle       String?\n  slug           String            @unique\n  content        String\n  excerpt        String?\n  format         ContentFormat     @default(MARKDOWN)\n  status         PostStatus        @default(DRAFT)\n  visibility     PostVisibility    @default(PUBLIC)\n  featuredImage  String\n  featuredVideo  String?\n  galleryImages  String[]\n  authorId       String\n  authorBio      String\n  authorTitle    String\n  author         String\n  categoryId     String?\n  seoTitle       String?\n  seoDescription String?\n  seoKeywords    String[]\n  seoScore       Int               @default(0)\n  shares         Int               @default(0)\n  readTime       Int               @default(0)\n  wordCount      Int               @default(0)\n  characterCount Int               @default(0)\n  likes          Int               @default(0)\n  views          Int               @default(0)\n  flagReason     String?\n  isFlagged      Boolean           @default(false)\n  isFeatured     Boolean           @default(false)\n  isPinned       Boolean           @default(false)\n  allowComments  Boolean           @default(true)\n  publishedAt    DateTime?\n  flaggedAt      DateTime?\n  scheduledAt    DateTime?\n  createdAt      DateTime          @default(now())\n  updatedAt      DateTime          @updatedAt\n  generatedById  String?\n  comments       BlogComment[]\n  user           User              @relation(fields: [authorId], references: [userId])\n  category       BlogCategory?     @relation(fields: [categoryId], references: [id])\n  aiGeneration   BlogAIGeneration? @relation(\"AIContentGenerationToExcerpt\", fields: [generatedById], references: [id])\n  viewsCount     BlogPostView[]\n  flaggedPosts   FlagedBlogPost[]\n  tags           BlogTag[]         @relation(\"BlogPostToBlogTag\")\n\n  @@index([authorId])\n  @@index([status])\n  @@index([visibility])\n  @@index([publishedAt])\n  @@index([slug])\n}\n\nmodel FlagedBlogPost {\n  id         String     @id @default(cuid())\n  reason     String\n  comment    String\n  flaggedBy  String\n  status     FlagStatus @default(FLAGGED)\n  createdAt  DateTime   @default(now())\n  reviewedAt DateTime?\n  postId     String\n  userId     String\n  post       BlogPost   @relation(fields: [postId], references: [id], onDelete: Cascade)\n  user       User       @relation(fields: [userId], references: [userId], onDelete: Cascade)\n}\n\nmodel BlogPostView {\n  id           String   @id @default(cuid())\n  postId       String\n  userId       String?\n  externalName String?\n  createdAt    DateTime @default(now())\n  post         BlogPost @relation(fields: [postId], references: [id])\n  user         User?    @relation(fields: [userId], references: [userId])\n\n  @@unique([postId, userId, externalName])\n}\n\nmodel BlogCategory {\n  id          String     @id @default(uuid())\n  name        String     @unique\n  description String?\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime   @updatedAt\n  posts       BlogPost[]\n}\n\nmodel BlogTag {\n  id        String     @id @default(uuid())\n  name      String     @unique\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  posts     BlogPost[] @relation(\"BlogPostToBlogTag\")\n}\n\nmodel BlogComment {\n  id               String            @id @default(uuid())\n  content          String\n  authorId         String\n  postId           String\n  userId           String?\n  parentId         String?\n  externalName     String?\n  externalAvatar   String?\n  likes            Int               @default(0)\n  status           String            @default(\"approved\")\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  user             User              @relation(fields: [authorId], references: [userId])\n  parent           BlogComment?      @relation(\"CommentToComment\", fields: [parentId], references: [id])\n  replies          BlogComment[]     @relation(\"CommentToComment\")\n  post             BlogPost          @relation(fields: [postId], references: [id])\n  reportedComments ReportedComment[]\n\n  @@index([postId])\n  @@index([authorId])\n  @@index([parentId])\n  @@index([status])\n}\n\nmodel ReportedComment {\n  id              String      @id @default(cuid())\n  commentId       String\n  blogSlug        String\n  blogOwner       String\n  parentCommentBy String\n  reportedBy      String\n  reason          String?\n  reportedAt      DateTime    @default(now())\n  resolved        Boolean     @default(false)\n  comment         BlogComment @relation(fields: [commentId], references: [id])\n  user            User        @relation(fields: [reportedBy], references: [userId])\n}\n\nmodel BlogAIGeneration {\n  id          String             @id @default(uuid())\n  prompt      String\n  parameters  Json?\n  status      AIGenerationStatus @default(COMPLETED)\n  output      String\n  format      ContentFormat      @default(MARKDOWN)\n  cost        Float?\n  tokensUsed  Int?\n  model       String?\n  userId      String\n  createdAt   DateTime           @default(now())\n  completedAt DateTime?\n  user        User               @relation(fields: [userId], references: [userId])\n  blogPosts   BlogPost[]         @relation(\"AIContentGenerationToExcerpt\")\n\n  @@index([userId])\n  @@index([status])\n  @@index([createdAt])\n}\n\nmodel Campaign {\n  id          String         @id @default(uuid())\n  name        String         @unique\n  userId      String\n  description String?\n  type        String?\n  status      CampaignStatus @default(ACTIVE)\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n  emailsSent  Int            @default(0)\n  recipients  Int?           @default(0)\n  openRate    Float?         @map(\"open_rate\")\n  clickRate   Float?         @map(\"click_rate\")\n  lastSentAt  DateTime?      @map(\"last_sent_at\")\n  emails      Email[]\n\n  @@index([status])\n}\n\nmodel Subscriber {\n  id                String             @id @default(cuid())\n  email             String\n  name              String?\n  newsLetterOwnerId String\n  source            String             @default(\"unknown\")\n  status            SubscriptionStatus @default(SUBSCRIBED)\n  campaignId        String?\n  pageUrl           String?\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime           @updatedAt\n\n  @@unique([email, newsLetterOwnerId], name: \"unique_subscriber_key\")\n}\n\nmodel EmailNotification {\n  id                           String                         @id @default(uuid())\n  type                         NotificationType\n  category                     NotificationCategory\n  title                        String\n  content                      Json\n  textContent                  String?\n  htmlContent                  String?\n  status                       NotificationStatus             @default(PENDING)\n  priority                     NotificationPriority           @default(MEDIUM)\n  userId                       String\n  emailsSentCount              Int?                           @default(0)\n  openCount                    Int?                           @default(0)\n  clickCount                   Int?                           @default(0)\n  recipients                   Int?                           @default(0)\n  bounceCount                  Int?                           @default(0)\n  openedByEmails               String[]                       @default([])\n  clickedByEmails              String[]                       @default([])\n  lastOpened                   DateTime?\n  lastClicked                  DateTime?\n  metadata                     Json?\n  sentAt                       DateTime?\n  createdAt                    DateTime                       @default(now())\n  updatedAt                    DateTime                       @updatedAt\n  read                         Boolean                        @default(false)\n  user                         User                           @relation(fields: [userId], references: [userId])\n  NotificationEmailClickedLink NotificationEmailClickedLink[]\n\n  @@index([userId])\n  @@index([status])\n  @@index([type])\n  @@index([category])\n}\n\nmodel ClickedLink {\n  id        String   @id @default(uuid())\n  emailId   String\n  url       String\n  clickedAt DateTime @default(now())\n  clickedBy String?\n  email     Email    @relation(fields: [emailId], references: [id])\n\n  @@index([emailId])\n}\n\nmodel NotificationEmailClickedLink {\n  id                  String             @id @default(uuid())\n  notificationEmailId String?\n  url                 String\n  clickedAt           DateTime           @default(now())\n  clickedBy           String?\n  notificationEmail   EmailNotification? @relation(fields: [notificationEmailId], references: [id])\n\n  @@index([notificationEmailId])\n}\n\nmodel Email {\n  // Primary Key\n  id String @id @default(uuid())\n\n  // Content Fields from the Mail Studio\n  title        String  @unique\n  content      String // Final generated HTML\n  emailSubject String\n  previewText  String?\n  builderMode  String  @default(\"drag-drop\") // 'drag-drop' or 'code'\n\n  // Mail Studio Builder Data\n  builderData  Json? // Stores the complete email state from MailStudio\n  elements     EmailElement[] // Individual elements for querying\n  templateUsed String? // Template identifier if used\n\n  // Status & Tracking\n  status            EmailStatus @default(DRAFT)\n  emailType         EmailType   @default(NEWSLETTER)\n  trackOpens        Boolean     @default(true)\n  trackClicks       Boolean     @default(true)\n  enableUnsubscribe Boolean     @default(true)\n\n  // Scheduling\n  scheduleDate DateTime?\n  scheduleTime String?\n\n  // Delivery Statistics\n  emailsSentCount Int @default(0)\n  recipients      Int @default(0)\n  bounceCount     Int @default(0)\n  openCount       Int @default(0)\n  clickCount      Int @default(0)\n\n  // Timing Information\n  sentAt      DateTime?\n  lastOpened  DateTime?\n  lastClicked DateTime?\n\n  // Tracking Arrays\n  openedByIps     String[] @default([])\n  openedByEmails  String[] @default([])\n  clickedByIps    String[] @default([])\n  clickedByEmails String[] @default([])\n\n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  userId            String\n  newsLetterOwnerId String\n  campaignId        String?\n  messageId         String?\n\n  // Foreign Key Relations\n  user     User      @relation(fields: [userId], references: [userId], onDelete: Cascade)\n  campaign Campaign? @relation(fields: [campaignId], references: [id], onDelete: SetNull)\n\n  // Related Models\n  clickedLinks     ClickedLink[]\n  emailAttachments EmailAttachment[]\n  emailRecipients  EmailRecipient[]\n  template         EmailTemplate?    @relation(fields: [templateUsed], references: [id], onDelete: SetNull)\n  emailAnalytics   EmailAnalytics?\n\n  @@unique([messageId])\n  // Indexes for better performance\n  @@index([userId])\n  @@index([campaignId])\n  @@index([status])\n  @@index([emailType])\n  @@index([sentAt])\n  @@index([scheduleDate])\n}\n\n// Stores individual email elements from the Mail Studio builder\nmodel EmailElement {\n  id         String      @id @default(uuid())\n  emailId    String\n  elementId  String // Unique ID from the Mail Studio (e.g., \"text-123456789\")\n  type       ElementType\n  content    String? // Text content for text/button elements\n  properties Json // Stores all element properties as JSON\n  sortOrder  Int // Order in the email layout\n  createdAt  DateTime    @default(now())\n  updatedAt  DateTime    @updatedAt\n\n  email Email @relation(fields: [emailId], references: [id], onDelete: Cascade)\n\n  @@unique([emailId, elementId])\n  @@index([emailId])\n  @@index([type])\n  @@index([sortOrder])\n}\n\n// Template system for Mail Studio\nmodel EmailTemplate {\n  id          String   @id @default(uuid())\n  name        String\n  description String?\n  thumbnail   String? // URL to template preview image\n  category    String // Basics, Layout, Media, etc.\n  tags        String[]\n  elements    Json // Array of EmailElement data\n  subject     String // Default subject\n  isPublic    Boolean  @default(false)\n  isFeatured  Boolean  @default(false)\n  usageCount  Int      @default(0)\n  userId      String? // Null for system templates\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user   User?   @relation(fields: [userId], references: [userId], onDelete: Cascade)\n  emails Email[] // Emails created from this template\n\n  @@index([userId])\n  @@index([category])\n  @@index([isPublic])\n  @@index([isFeatured])\n}\n\nmodel EmailAttachment {\n  id        String   @id @default(uuid())\n  emailId   String\n  filename  String\n  fileSize  Int // in bytes\n  mimeType  String\n  url       String // Storage URL\n  createdAt DateTime @default(now())\n\n  email Email @relation(fields: [emailId], references: [id], onDelete: Cascade)\n\n  @@index([emailId])\n}\n\nmodel EmailRecipient {\n  id             String          @id @default(uuid())\n  emailId        String\n  recipientEmail String\n  status         RecipientStatus @default(PENDING)\n  sentAt         DateTime?\n  deliveredAt    DateTime?\n  openedAt       DateTime?\n  clickedAt      DateTime?\n  bouncedAt      DateTime?\n  bounceReason   String?\n  unsubscribeAt  DateTime?\n\n  email Email @relation(fields: [emailId], references: [id], onDelete: Cascade)\n\n  @@unique([emailId, recipientEmail])\n  @@index([emailId])\n  @@index([recipientEmail])\n  @@index([status])\n}\n\nmodel EmailAnalytics {\n  id               String @id @default(uuid())\n  emailId          String @unique\n  totalOpens       Int    @default(0)\n  deliveredCount   Int    @default(0)\n  totalRecipients  Int    @default(0)\n  uniqueOpens      Int    @default(0)\n  totalClicks      Int    @default(0)\n  uniqueClicks     Int    @default(0)\n  deliveryRate     Float  @default(0.0)\n  openRate         Float  @default(0.0)\n  clickRate        Float  @default(0.0)\n  bounceRate       Float  @default(0.0)\n  unsubscribeCount Int    @default(0)\n  spamReportCount  Int    @default(0)\n  forwardCount     Int    @default(0)\n  deviceBreakdown  Json? // { mobile: number, desktop: number, tablet: number }\n  locationData     Json? // Geographic distribution\n\n  email Email @relation(fields: [emailId], references: [id], onDelete: Cascade)\n\n  @@index([emailId])\n}\n",
  "inlineSchemaHash": "dafb3895a5fee5486641f2f0e54d884a39da00aafb5e3e10fc60035e848418f8",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paystackCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paystackSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"enum\",\"type\":\"Plan\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"subscriptionStatus\",\"kind\":\"enum\",\"type\":\"PlanSubscriptionStatus\"},{\"name\":\"accType\",\"kind\":\"enum\",\"type\":\"AccountType\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kycStatus\",\"kind\":\"enum\",\"type\":\"KYCStatus\"},{\"name\":\"SenderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastPaymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextPaymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"successfulPayments\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"failedAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriberLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blogPostLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiGenerationLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"termsAndConditionsAccepted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"approvedKYC\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isLoggedIn\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is2FAEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loggedInAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToUser\"},{\"name\":\"aIContentGenerationToExcerpt\",\"kind\":\"object\",\"type\":\"BlogAIGeneration\",\"relationName\":\"BlogAIGenerationToUser\"},{\"name\":\"blogComments\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"BlogCommentToUser\"},{\"name\":\"blogPosts\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogPostToUser\"},{\"name\":\"postViews\",\"kind\":\"object\",\"type\":\"BlogPostView\",\"relationName\":\"BlogPostViewToUser\"},{\"name\":\"emails\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToUser\"},{\"name\":\"flagedPosts\",\"kind\":\"object\",\"type\":\"FlagedBlogPost\",\"relationName\":\"FlagedBlogPostToUser\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToUser\"},{\"name\":\"kyc\",\"kind\":\"object\",\"type\":\"Kyc\",\"relationName\":\"KycToUser\"},{\"name\":\"usage\",\"kind\":\"object\",\"type\":\"MembershipUsage\",\"relationName\":\"MembershipUsageToUser\"},{\"name\":\"notificationEmails\",\"kind\":\"object\",\"type\":\"EmailNotification\",\"relationName\":\"EmailNotificationToUser\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"reportedComments\",\"kind\":\"object\",\"type\":\"ReportedComment\",\"relationName\":\"ReportedCommentToUser\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"EmailTemplate\",\"relationName\":\"EmailTemplateToUser\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jti\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revoked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"OTP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"otps\"},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"externalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvoiceToUser\"}],\"dbName\":null},\"ThirdPartyOTP\":{\"fields\":[{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otpType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"ApiKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jwt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isTrial\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApiKeyToUser\"}],\"dbName\":null},\"Kyc\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"enum\",\"type\":\"KYCAccountType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"KYCStatus\"},{\"name\":\"levels\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"documents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"livePhoto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectedResponse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KycToUser\"},{\"name\":\"kycDocuments\",\"kind\":\"object\",\"type\":\"KYCDocument\",\"relationName\":\"KYCDocumentToKyc\"}],\"dbName\":null},\"KYCDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kycId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kyc\",\"kind\":\"object\",\"type\":\"Kyc\",\"relationName\":\"KYCDocumentToKyc\"}],\"dbName\":null},\"MembershipUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"month\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailsSent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscribersAdded\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"campaignsCreated\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"blogPostsCreated\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiGenerationsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MembershipUsageToUser\"}],\"dbName\":null},\"BlogPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"enum\",\"type\":\"ContentFormat\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PostStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"PostVisibility\"},{\"name\":\"featuredImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"featuredVideo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"galleryImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorBio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seoTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seoDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seoKeywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seoScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shares\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"readTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wordCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"characterCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flagReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isFlagged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPinned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allowComments\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"flaggedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"generatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"BlogCommentToBlogPost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogPostToUser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"BlogCategory\",\"relationName\":\"BlogCategoryToBlogPost\"},{\"name\":\"aiGeneration\",\"kind\":\"object\",\"type\":\"BlogAIGeneration\",\"relationName\":\"AIContentGenerationToExcerpt\"},{\"name\":\"viewsCount\",\"kind\":\"object\",\"type\":\"BlogPostView\",\"relationName\":\"BlogPostToBlogPostView\"},{\"name\":\"flaggedPosts\",\"kind\":\"object\",\"type\":\"FlagedBlogPost\",\"relationName\":\"BlogPostToFlagedBlogPost\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"BlogTag\",\"relationName\":\"BlogPostToBlogTag\"}],\"dbName\":null},\"FlagedBlogPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flaggedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FlagStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogPostToFlagedBlogPost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FlagedBlogPostToUser\"}],\"dbName\":null},\"BlogPostView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogPostToBlogPostView\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogPostViewToUser\"}],\"dbName\":null},\"BlogCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogCategoryToBlogPost\"}],\"dbName\":null},\"BlogTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogPostToBlogTag\"}],\"dbName\":null},\"BlogComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalAvatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogCommentToUser\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"CommentToComment\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"CommentToComment\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"BlogCommentToBlogPost\"},{\"name\":\"reportedComments\",\"kind\":\"object\",\"type\":\"ReportedComment\",\"relationName\":\"BlogCommentToReportedComment\"}],\"dbName\":null},\"ReportedComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogSlug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blogOwner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentCommentBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reportedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"BlogComment\",\"relationName\":\"BlogCommentToReportedComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportedCommentToUser\"}],\"dbName\":null},\"BlogAIGeneration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AIGenerationStatus\"},{\"name\":\"output\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"enum\",\"type\":\"ContentFormat\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tokensUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BlogAIGenerationToUser\"},{\"name\":\"blogPosts\",\"kind\":\"object\",\"type\":\"BlogPost\",\"relationName\":\"AIContentGenerationToExcerpt\"}],\"dbName\":null},\"Campaign\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CampaignStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailsSent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"open_rate\"},{\"name\":\"clickRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"click_rate\"},{\"name\":\"lastSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_sent_at\"},{\"name\":\"emails\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"CampaignToEmail\"}],\"dbName\":null},\"Subscriber\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newsLetterOwnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"campaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmailNotification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"NotificationCategory\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"textContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"NotificationStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"NotificationPriority\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailsSentCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clickCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bounceCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openedByEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clickedByEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastOpened\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastClicked\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailNotificationToUser\"},{\"name\":\"NotificationEmailClickedLink\",\"kind\":\"object\",\"type\":\"NotificationEmailClickedLink\",\"relationName\":\"EmailNotificationToNotificationEmailClickedLink\"}],\"dbName\":null},\"ClickedLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clickedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clickedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"ClickedLinkToEmail\"}],\"dbName\":null},\"NotificationEmailClickedLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationEmailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clickedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clickedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notificationEmail\",\"kind\":\"object\",\"type\":\"EmailNotification\",\"relationName\":\"EmailNotificationToNotificationEmailClickedLink\"}],\"dbName\":null},\"Email\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailSubject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previewText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"builderMode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"builderData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"elements\",\"kind\":\"object\",\"type\":\"EmailElement\",\"relationName\":\"EmailToEmailElement\"},{\"name\":\"templateUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EmailStatus\"},{\"name\":\"emailType\",\"kind\":\"enum\",\"type\":\"EmailType\"},{\"name\":\"trackOpens\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"trackClicks\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableUnsubscribe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scheduleDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduleTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailsSentCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bounceCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clickCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastOpened\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastClicked\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"openedByIps\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openedByEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clickedByIps\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clickedByEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newsLetterOwnerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"campaignId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailToUser\"},{\"name\":\"campaign\",\"kind\":\"object\",\"type\":\"Campaign\",\"relationName\":\"CampaignToEmail\"},{\"name\":\"clickedLinks\",\"kind\":\"object\",\"type\":\"ClickedLink\",\"relationName\":\"ClickedLinkToEmail\"},{\"name\":\"emailAttachments\",\"kind\":\"object\",\"type\":\"EmailAttachment\",\"relationName\":\"EmailToEmailAttachment\"},{\"name\":\"emailRecipients\",\"kind\":\"object\",\"type\":\"EmailRecipient\",\"relationName\":\"EmailToEmailRecipient\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"EmailTemplate\",\"relationName\":\"EmailToEmailTemplate\"},{\"name\":\"emailAnalytics\",\"kind\":\"object\",\"type\":\"EmailAnalytics\",\"relationName\":\"EmailToEmailAnalytics\"}],\"dbName\":null},\"EmailElement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"elementId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ElementType\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"properties\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailElement\"}],\"dbName\":null},\"EmailTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"elements\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isFeatured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailTemplateToUser\"},{\"name\":\"emails\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailTemplate\"}],\"dbName\":null},\"EmailAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailAttachment\"}],\"dbName\":null},\"EmailRecipient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RecipientStatus\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clickedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bouncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bounceReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unsubscribeAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailRecipient\"}],\"dbName\":null},\"EmailAnalytics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalOpens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveredCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalRecipients\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniqueOpens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uniqueClicks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"openRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clickRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bounceRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unsubscribeCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spamReportCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"forwardCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deviceBreakdown\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"locationData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"email\",\"kind\":\"object\",\"type\":\"Email\",\"relationName\":\"EmailToEmailAnalytics\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

